services:
  postgresql:
    build:
      context: ./backend
      dockerfile: Dockerfile.postgres  # Обновленное имя файла Dockerfile
    container_name: postgresql  # Имя контейнера
    restart: "no"

    environment:
      POSTGRES_USER: develop  # Имя пользователя БД
      POSTGRES_PASSWORD: develop  # Пароль пользователя
      POSTGRES_DB: bip  # Имя создаваемой БД

    volumes:
      - postgres_data:/var/lib/postgresql/data  # Сохраняем данные БД вне контейнера

    ports:
      - "5433:5432"  # Пробрасываем порт PostgreSQL (локальный 5433 → контейнерный 5432)

  bip_app:
    build:
      context: ./backend
      dockerfile: Dockerfile.app  # Используем Dockerfile.app для сборки
    container_name: bip_app
    restart: "no"
    depends_on:
      - postgresql  # Приложение зависит от базы данных
    ports:
      - "8080:8080"  # Пробрасываем порт приложения
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql:5432/bip
      SPRING_DATASOURCE_USERNAME: develop
      SPRING_DATASOURCE_PASSWORD: develop

  frontend:
    build:
      context: ./frontend
    ports:
      - "8090:80"
    container_name: front
    restart: unless-stopped
  
  ml-service:
    build:
      context: ./ml-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - PIP_NO_CACHE_DIR=on
      
volumes:
  postgres_data:  # Определяем том для хранения данных


